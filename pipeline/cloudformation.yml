AWSTemplateFormatVersion: '2010-09-09'
Description: Template to create AWS CodePipeline and CodeBuild for deploying CloudFormation templates.

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner (e.g., dhruv9911)
  
  GitHubRepoName:
    Type: String
    Description: GitHub repository name (e.g., AWS-Organization-Creation-CloudFormation-Code)
  
  GitHubBranch:
    Type: String
    Description: GitHub branch to trigger the pipeline (e.g., main)
    Default: main
  
  GitHubToken:
    Type: String
    Description: GitHub OAuth token for accessing the repository
    NoEcho: true
  
  ArtifactBucketName:
    Type: String
    Description: Name of the S3 bucket to store artifacts
    Default: aws-organization-creation-cloudformation-code-bucket

Resources:
  # S3 Bucket for Artifacts
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactBucketName
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactBucketName}"
                  - !Sub "arn:aws:s3:::${ArtifactBucketName}/*"
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MyCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucketName
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.9
              commands:
                - echo "Installing dependencies..."
                - pip install awscli --upgrade
            pre_build:
              commands:
                - echo "Pre-build phase..."
                - aws --version
                - echo "Validating CloudFormation templates..."
                - for template in templates/*.yml; do aws cloudformation validate-template --template-body file://$template || exit 1; done
            build:
              commands:
                - echo "Build phase..."
                - echo "Uploading CloudFormation templates to S3..."
                - aws s3 cp templates/ s3://${ARTIFACT_BUCKET}/templates/ --recursive
            post_build:
              commands:
                - echo "Post-build phase..."
                - echo "Deploying CloudFormation stacks..."
                - bash scripts/deploy.sh
      TimeoutInMinutes: 10

  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactBucketName}"
                  - !Sub "arn:aws:s3:::${ArtifactBucketName}/*"
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: "*"

  # CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MyCodePipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

Outputs:
  CodePipelineName:
    Description: Name of the CodePipeline
    Value: !Ref CodePipeline

  CodeBuildProjectName:
    Description: Name of the CodeBuild Project
    Value: !Ref CodeBuildProject

  ArtifactBucketName:
    Description: Name of the S3 bucket for artifacts
    Value: !Ref ArtifactBucketName
